<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTipMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>